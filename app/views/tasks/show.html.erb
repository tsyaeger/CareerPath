





<div class='user-id' data-id="<%= @task.user.id %>"></div>
<div class='task-id' data-id="<%= @task.id %>"></div>
<div id='task-show-wrapper' class='show-container'>
    <div class='heading-container contact-item-container'>
        <div class='edit-delete'>
            <td><%= link_to "Edit", edit_task_path(@task) %></td>
            <td><%= link_to "Delete", task_path(@task), :method => :delete %></td>
        </div>

        <!-- <span class="headline pg-btn btn-previous"><i class="fa fa-long-arrow-left"></i></span> -->
        <h1 id='task-title' class='headline'><%= @task.title %></h1>
        <!-- <span class="headline pg-btn btn-next"><i class="fa fa-long-arrow-right"></i></span> -->
    </div> <!-- close container -->

    <div id="task-description-container">
        <div id='task-description'>
        	<h3>Description: <%= @task.description %></h3>
        </div>
        <div id='date-due'><h3>DUE DATE: <%= format_date(@task.due_date) %></h3></div>
    </div> <!-- close container -->

    <div id='completed-container'>
        <section id='completed-section'>
            <div id='task-completed-string'></div>
            <div id='completed-toggle'>
                <input type="checkbox" id="switch">
                <label id='switch-label' for="switch">Toggle</label>
            </div>
        </section>
    </div> <!-- close container -->

    <div class='linked-items'>
        <section class='linked-items-section'>


            <div id='task-linked-doc-container' class='task-linked-container'>
                <div id='task-linked-docs'  class='task-linked-items'>
                    <h2>LINKED DOCUMENTS</h2>
                    <div id='task-documents'></div>
                </div>
                <div id='add-doc-link'>
                    <%= render 'documents/document_task_dropdown' %>
                </div>
            </div> <!-- close container -->



            <div id='task-linked-contact-container' class='task-linked-container'>
                <div id='task-linked-contacts' class='task-linked-items'>
                    <h2>LINKED CONTACTS</h2>
                    <div id='task-contacts'></div>
                </div>

                <div id='add-contact-link'>
                    <%= render 'contacts/contact_task_dropdown' %>
                </div>
            </div> <!-- close container -->



            <div id='task-linked-job-container' class='task-linked-container'>
                <div id='task-linked-jobs' class='task-linked-items'>
                    <h2>LINKED JOBS</h2>
                    <div id='task-jobs'></div>
                </div>
                <div id='add-job-link'>
                    <%= render 'jobs/job_task_dropdown' %>
                </div>
            </div> <!-- close container -->

        </section>


    </div> <!-- close linked items-->
</div> <!-- close wrapper -->








<script>

var AUTH_TOKEN = $('meta[name=csrf-token]').attr('content');


//RETRIEVE TASK DOCUMENT, CREATE CONSTANT INSTANCE, APPEND DOCUMENT
const getDocuments = function (data) {
    jQuery(data['documents']).each(function(i, doc){
        let d = new Document(doc, user_id)
        $("#task-documents").append(d.formatSpan())
    })
}


//RETRIEVE TASK CONTACTS, CREATE CONSTANT INSTANCE, APPEND CONTACTS
const getContacts = function (data) {
    jQuery(data['contacts']).each(function(i, contact){
        let c = new Contact(contact, user_id)
        console.log(c)
        $("#task-contacts").append(c.formatSpan())
    })
}


//RETRIEVE TASK JOBS, CREATE CONSTANT INSTANCE, APPEND JOBS
const getJobs = function (data) {
    jQuery(data['jobs']).each(function(i, job){
        let j = new Job(job, user_id)
        console.log('worked')
        $("#task-jobs").append(j.formatSpan())
    })
}



const displayCompletedStatus = function(task) {
    $('#task-completed-string').html(task.completedString())
    let tog = document.getElementById("switch")
    tog.checked = task.completed;
}

const toggleCompleted = function (task) {
    // place click listener on toggle
    $('#switch').on('click', function() {
        // route changing to new status
        task.completed = !task.completed;
        $.get(`/tasks/${task_id}/completed?q=${task.completed}`, function(data) {
            $('#task-completed-string').html(task.completedString(task.completed))
        })
    })
}


//BUTTON LISTENER, SEND PATCH W CONTACT TO CONTROLLER, 
const linkTaskContact = function() {
    $('#btn-add-contact').on('click', function(e) {
        e.preventDefault()
        var form = $('#add-contact')
        var action = form.attr('action')
        var data = form.serialize()
        data.authenticity_token = AUTH_TOKEN;
        $.ajax({
            url: `/tasks/${task_id}/link_contact`, 
            data: data, 
            type: "PATCH",
            dataType: 'json',
            success: function (response) {
                contact = new Contact(response, user_id)
                $("#task-contacts").append(contact.formatSpan())
            },
            error: function (response) {
                alert('no success') }
        })
    })
}


//BUTTON LISTENER, SEND PATCH W DOCUMENT TO CONTROLLER, 
const linkTaskDocument = function() {
    $('#add-document').on('submit', function(e) {
        e.preventDefault()
        var form = $('#add-document')
        var action = form.attr('action')
        var data = form.serialize()
        data.authenticity_token = AUTH_TOKEN;
        $.ajax({
        url: action,
        data: data,
        type: "PATCH", 
        success: function (data) {
            doc = new Document(data, user_id)
            $("#task-documents").append(doc.formatSpan())
        },
        error: function (data) {
            alert('no success') }
        })
    })
}


//BUTTON LISTENER, SEND PATCH W CONTACT TO CONTROLLER, 
const linkTaskJob = function() {

    $('#add-job').on('submit', function(e) {
        e.preventDefault()
        var form = $('#add-job')
        var action = form.attr('action')
        var data = form.serialize()
        data.authenticity_token = AUTH_TOKEN;
        $.ajax({
        url: action,
        data: data,
        type: "PATCH", 
        success: function (data) {
            doc = new Job(data, user_id)
            $("#task-jobs").append(doc.formatSpan())
            alert('success') },
        error: function (data) {
            alert('no success') }
        })
    })
}













// BUTTON LISTENER, REMOVE TASK DOCUMENT 
const unlinkTaskDocument = function() {
    $(document.body).on('click', 'span.remove-document', function(e) {
        let documentId = $(this).data('id')
        $.ajax({
            type: "DELETE", 
            url: `/tasks/${task_id}/documents/${documentId}/unlink`,
            data: {authenticity_token: AUTH_TOKEN},
            dataType: 'json',
            success: function (data) {
                let id = data['id']
                console.log('worked')
                $("#documentItem-" + documentId).remove()
                $("#" + id).remove();
            },
            error: function (data) {
                alert('no success') }
        })
    })
}


// REMOVE TASK CONTACT 
const unlinkTaskContact = function() {

    $(document.body).on('click', 'span.remove-contact', function(e) {
        let contactId = this.id
        $.ajax({
            type: "DELETE", 
            url: `/tasks/${task_id}/contacts/${contactId}/unlink`,
            dataType: 'json',
            data: {authenticity_token: AUTH_TOKEN},
            success: function (data) {
                let id = data['id']
                $("#contactItem-" + id).remove()
                $("#" + id).remove();
                $('.remove-contact.'+ id).remove()
            },
            error: function (data) {
                alert('no success') }
        })
    })
}

// BUTTON LISTENER, REMOVE TASK DOCUMENT 
const unlinkTaskJob = function() {

    $(document.body).on('click', 'span.remove-job', function(e) {
        let jobId = $(this).data('id')

        $.ajax({
            type: "DELETE", 
            url: `/tasks/${task_id}/jobs/${jobId}/unlink`,
            data: {authenticity_token: AUTH_TOKEN},
            dataType: 'json',
            success: function (data) {
                console.log(data)
                let id = data['id']
                $("#remove-job-" + id).remove()
                $('span.remove-job.'+ id).remove()
            },
            error: function (data) {
                alert('no success') }
        })
    })
}




// OPEN DOC DROPDOWN SPAN
const docClick = function() {
    var clicks = 0

    $(document.body).on('click', "i.doc", function() {
        var id = this.id

    if (clicks % 2 == 0) {
        $('.document.'+id).css('display', 'block')
        clicks++
        }
    else {
        $('.document.'+id).css('display', 'none')
        clicks++
        } 
    });
}

// OPEN CONTACT DROPDOWN SPAN
const contactClick = function() {
    var clicks = 0

    $(document.body).on('click', "i.contact", function() {
        var id = this.id

    if (clicks % 2 == 0) {
        $('.contact.'+id).css('display', 'block')
        clicks++
        }
    else {
        $('.contact.'+id).css('display', 'none')
        clicks++
        } 
    });
}

// OPEN CONTACT DROPDOWN SPAN
const jobClick = function() {
    var clicks = 0

    $(document.body).on('click', "i.job", function() {
        var id = this.id

    if (clicks % 2 == 0) {
        $('.job.'+id).css('display', 'block')
        clicks++
        }
    else {
        $('.job.'+id).css('display', 'none')
        clicks++
        } 
    });
}




$( document ).on('turbolinks:load', function() {
    user_id = $(".user-id").data("id")
    task_id = $(".task-id").data("id")

    $.get(`/tasks/${task_id}.json`, function(data) {
        task = new Task(data, user_id)
        console.log(task)
        getDocuments(data)
        getContacts(data)
        getJobs(data)
        displayCompletedStatus(task)
        toggleCompleted(task)
        linkTaskContact()
        linkTaskDocument()
        linkTaskJob()
        docClick()
        jobClick()
        contactClick()
        unlinkTaskContact()
        unlinkTaskDocument()
        unlinkTaskJob()

    });
    
})


</script>
