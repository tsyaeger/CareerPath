<div class='user-id' data-id="<%= @user.id %>"></div>
<div id='user-show-container'>
    <div id='position-container' class='user-item-container'>
        <h1><%= link_to 'Positions', jobs_path %></h1>
        <div id='job-search'>
            <div>
                <input type='text' id='filter-jobs' class='dash-field' placeholder='filter positions'>        
            </div>            
            <div id="job-list"></div>
        </div>
    </div> <!-- close container -->

    <div id='task-container' class='user-item-container'>
        <h1><%= link_to 'Tasks', new_task_path %></h1>
        <div id='task-search'>
            <div>
                <input type='text' id='filter-tasks' class='dash-field' placeholder='filter tasks'> 
            </div>
            <div id="task-list"></div>
        </div>
    </div> <!-- close container -->

    <div id='contact-container' class='user-item-container'>
        <h1><%= link_to 'Contacts', new_contact_path %></h1>
        <div id='contact-search'>
            <div>
                <input type='text' id='filter-contacts' class='dash-field' placeholder='filter contacts'>
            </div>
            <div id='contact-list' data-id="<%= @user.id %>"></div>
        </div>
    </div> <!-- close container -->

    <div id='document-container' class='user-item-container'>
        <h1><%= link_to 'Documents', new_document_path %></h1>
        <div id='document-search'>
            <div>
                <input type='text' id='filter-documents' class='dash-field' placeholder='filter documents'>
            </div>
            <div id="document-list"></div>
        </div>
    </div> <!-- close container -->
</div> <!-- close page -->




<script type="text/javascript" charset="utf-8">

// var initialized = false;


let items = {}

let filters = {
    jobString: '',
    taskString: '',
    contactString: '',
    documentString: ''
}


const jobSearchListener = function () {
    $('#filter-jobs').on('keyup', function () {
        filters['jobString'] = $(this).val()
        renderJobs()
    })
}

const renderJobs = function () {
    if (filters['jobString'] != '') {
        jobs = getFilteredJobs(items['jobs'], filters['jobString'])
    } else {
        jobs = items['jobs']
    }
    setJobs(jobs)
}

const getFilteredJobs = function (jobs, substring) {
    return jobs.filter(function (j) {
        co = j.company.toLowerCase()
        po = j.position.toLowerCase()
        return co.includes(substring.toLowerCase()) || po.includes(substring.toLowerCase())
    })
}

const setJobs = function (filteredJobs) {
    $("#job-list").empty()
    $.each(filteredJobs, function(i, job){
        let j = new Job(job, id)
        $("#job-list").append(j.formatIndex())
    })
}






const renderTasks = function () {

    if (filters['taskString'] != '') {
        tasks = getFilteredTasks(items['tasks'], filters['taskString'])
    } else {
        tasks = items['tasks']
    }
    setTasks(tasks)
}

const getFilteredTasks = function (tasks, substring) {
    return tasks.filter(function (t) {
        title = t.title.toLowerCase()
        return title.includes(substring.toLowerCase())
    })
}

const setTasks = function (filteredTasks) {
    $("#task-list").empty()
    $.each(filteredTasks, function(i, task){
        let t = new Task(task, id)
        $("#task-list").append(t.formatIndex())
    })
}

const taskSearchListener = function () {
    $('#filter-tasks').on('keyup', function () {
        filters['taskString'] = $(this).val()
        renderTasks()
    })
}




const renderContacts = function () {

    if (filters['contactString'] != '') {
        filteredContacts = getFilteredContacts(items['contacts'], filters['contactString'])
    } else {
        filteredContacts = items['contacts']
    }
    // contacts = filteredContacts['first_name'].sort()
    setContacts(filteredContacts)
}

const getFilteredContacts = function (contacts, substring) {
    return contacts.filter(function (c) {
        contact = c.first_name.toLowerCase()
        return contact.includes(substring.toLowerCase()) || c.last_name.includes(substring.toLowerCase())
    })
}

const setContacts = function (filteredContacts) {
    $("#contact-list").empty()
    $.each(filteredContacts, function(i, contact){
        let c = new Contact(contact, id)
        $("#contact-list").append(c.formatIndex())
    })
}

const contactSearchListener = function () {
    $('#filter-contacts').on('keyup', function () {
        filters['contactString'] = $(this).val()
        renderContacts()
    })
}




const renderDocuments = function () {

    if (filters['documentString'] != '') {
        documents = getFilteredDocuments(items['documents'], filters['documentString'])
    } else {
        documents = items['documents']
    }
    setDocuments(documents)
}

const getFilteredDocuments = function (documents, substring) {
    return documents.filter(function (d) {
        doc = d.title.toLowerCase()
        return doc.includes(substring.toLowerCase()) 
    })
}

const setDocuments = function (filteredDocuments) {
    $("#document-list").empty()
    $.each(filteredDocuments, function(i, document){
        let d = new Document (document, id)
        $("#document-list").append(d.formatIndex())
    })
}

const documentSearchListener = function () {
    $('#filter-documents').on('keyup', function () {
        filters['documentString'] = $(this).val()
        renderDocuments()
    })
}



$( document ).on('turbolinks:load', function(){
    id = $(".user-id").data("id")

    $.get(`/users/${id}.json`, function(data) {
        items = data

        renderJobs()
        jobSearchListener()

        renderTasks()
        taskSearchListener()

        renderContacts()
        contactSearchListener()

        renderDocuments()
        documentSearchListener()

    });

})

</script>





