<style>

textarea, select {
    width: 320px;
    box-sizing: border-box;
    border-radius: 4px;
    margin: 0 0 20px 0;
    font-size: 16px;
}

#job-show-wrapper {
	display: grid;
	grid-template-columns: 350px 1fr 1fr;
	/*grid-template-rows: 90px 35px 75px 450px 450px*/
}

#heading-container {
	grid-column: 1/4;
	grid-row: 1;
	margin: 0;
	margin-top: 30px;
	padding: 0;
	text-align: center;
}

.edit-delete {
	float: right;
}


.pg-btn {
    margin-top: 6px;
	margin: 6px 30px 0 30px;
    font-size: 40px;
    color: #4c4a4a;
}

.pg-btn:hover {
	color: #a81515;
}


#dates-container {
	grid-column: 1/4;
	grid-row: 2;
	margin: 0;
	margin: 0px 515px 0px 515px;
	padding: 0;
	text-align: center;
}

.posted-date {
	float: left;
}

.post-to {
	float: right;
}

#applied-container {
	grid-column: 1/4;
	grid-row: 3;
	padding: 0px 680px 35px 680px;
	border-bottom: solid black 1px;
}


#job-applied {
	float: left;
}

#applied-bool {
	margin-top: 18px;
}

#applied-toggle {
	float: right;
}

#switch {
	margin: 0;
	padding: 0;
}

/*#switch-label {
	padding: 14px 12px 15px 0;
}*/

input[type=checkbox]{
	height: 0;
	width: 10px;
	visibility: hidden;
}

label {
	cursor: pointer;
	text-indent: -9999px;
	width: 90px;
	height: 16px;
	background: grey;
	display: block;
	border-radius: 100px;
	position: relative;
}

label:after {
	content: '';
	position: absolute;
	top: 5px;
	left: 5px;
	width: 16px;
	height: 16px;
	background: #fff;
	border-radius: 90px;
	transition: 0.2s;
}

input:checked + label {
	background: #00b746;
}

input:checked + label:after {
	left: calc(100% - 5px);
	transform: translateX(-100%);
}




/* JOB CONTENT */
.job-content-container {
	padding: 25px;
	text-align: left;
	overflow: scroll;

}

.job-desc-container {
	grid-column: 2;
	grid-row: 4; 
	padding-left: 25px;
	border-right: solid black 1px;
	border-bottom: solid black 1px;
}

.job-co-container {
	grid-column: 3;
	grid-row: 4; 
	border-bottom: solid black 1px;
}

.job-reqs-container {
	grid-column: 2;
	grid-row: 5; 
	padding-left: 25px;
	border-right: solid black 1px;
	border-bottom: solid black 1px;
}

.job-notes-container {
	grid-column: 3;
	grid-row: 5; 
	border-bottom: solid black 1px;
}


/* SIDEBAR */
.linked-items {
	grid-column: 1;
	grid-row: 4/6; 
	display: grid;
	grid-template-columns: 1fr;
	/*grid-template-rows: 1fr 1fr 1fr 1fr 1fr*/
	margin: 0;
	margin-top: 20px;
	padding: 0;
	text-align: center;
}



.link-doc-container {
	padding: 10px 0 30px;
	/*border-bottom: solid black 1px;*/
	border-right: solid black 1px;
}

#btn-add-document {
	font-size: 16px;
	height: 35px;
	width: 225px;
	margin: 0;
	padding: 0;
}


#btn-add-contact {
	font-size: 16px;
	height: 35px;
	width: 225px;
	margin: 0;
	padding: 0;
}

.link-contact-container {
	padding: 10px 0 30px;
	/*border-bottom: solid black 1px;*/
	border-right: solid black 1px;
}

.link-task-container {
	padding: 10px 0 30px;
	border-right: solid black 1px;
}


#linked-docs {
	grid-column: 1;
	grid-row: 2;
}

#add-doc-link {
	grid-column: 1;
	grid-row: 3;
}

#job_document_ids {
	margin: 0;
}

#job_contact_ids {
	margin: 0;
}

h3.create-item a{
	color: #B50000;
}

</style>




<div class='user-id' data-id="<%= @job.user.id %>"></div>
<div class='job-id' data-id="<%= @job.id %>"></div>

<div id='job-show-wrapper'>

	<div id='heading-container'>
		<div class='edit-delete'>
			<td><%= link_to "Edit", edit_user_job_path(@job.user, @job) %></td>
		    <td><%= link_to "Delete", user_job_path(@job.user, @job), :method => :delete %></td>
		</div>
	    <span class="headline pg-btn btn-previous"><i class="fa fa-long-arrow-left"></i></span>
	    <h1 id='job-company-position' class='headline'><%= @job.company %> - <%= @job.position %></h1>
		<span class="headline pg-btn btn-next"><i class="fa fa-long-arrow-right"></i></span>
	</div>


	<div id='dates-container'>
		<div><h3 class='posted-date'>Posted Date: <%= format_date(@job.date_posted) %></h3></div>
		<div><h3 class='post-to'><a href="<%= @job.url %>" target="_blank">Go to Posting</a></h3></div>
		<div><h3> Closing Date: xxx</h3></div>
	</div>

	<div id='applied-container'>
		<div id='job-applied'></div>
		<!-- <div id='applied-btn'></div> -->
		<div id='applied-toggle'><input type="checkbox" id="switch"><label id='switch-label' for="switch">Toggle</label></div>
	</div>

		
	<div class='job-desc-container job-content-container'>
		<% if !!@job.job_desc %>
			<h2> Job Description </h2>
			<h3 class='descriptions'><%= @job.job_desc %></h3>
		<% else %>
			<h2>This job has no job description</h2>
		<% end %>
	</div>


	<div class='job-co-container job-content-container'>
		<% if !!@job.co_desc %>
			<h2> Company Description </h2>
			<h3 class='descriptions'><%= @job.co_desc %></h3>
		<% else %>
			<h2>This job has no company description</h2>
		<% end %>
	</div>



	<div class='job-reqs-container job-content-container'>
		<h2>Job Requirements</h2>
		<h3>5 years dev experience, CS or similar degree, writes DRY code.</h3>
	</div>



	<div class='job-notes-container job-content-container'>
		<h2>Job Notes</h2>
		<h3>Remember to mention xxxx and yyyyy. Contact suggested that I practice ....</h3>
	</div>



	<div class='linked-items'>

		<div class='link-doc-container'>
			<div id='linked-docs'>
		    	<h2>LINKED DOCUMENTS</h2>
		    	<div id='job-documents'></div>
		    </div>

		    <div id='add-doc-link'>
	    		<%= render 'documents/document_dropdown' %>
	    	</div>
	    </div>

	    <div class='link-contact-container'>
	    	<div id='linked-contacts'>
		    	<h2>LINKED CONTACTS</h2>
		    	<div id='job-contacts'></div>
		    </div>

		    <div id='add-doc-link'>
				<%= render 'contacts/contact_dropdown' %>
			</div>
	    </div>

	    <div class='link-task-container'>
	    	<h2>LINKED TASKS</h2>
			<% if @job.tasks.length > 0%>
				<!-- <div id='task-list'></div> -->
		    	<%= render partial: "tasks/task", collection: @job.tasks || "No Linked Tasks" %>
		    <% else %>
		    	<h3>You have no linked tasks</h3>
			<% end %>
			<h3 class='create-item'><%= link_to "*create a task*", new_user_task_path(@job.user) %></h3>
	    </div>

	</div>



</div> <!-- close wrapper -->





<script>

//REQUEST JOB JSON
$( document ).on('turbolinks:load', function() {
	user_id = $(".user-id").data("id")
	job_id = $(".job-id").data("id")

	$.get(`/users/${user_id}/jobs/${job_id}`, function(data) {

		job = new Job(data, user_id)

	    displayAppliedDetails(job)
		buttonApplied(job)

		getDocuments(data)
		getContacts(data)

	    nextButton()
	    previousButton()

		linkContact()
		linkDocument()
		
		unlinkContact()
		unlinkDocument()

		docClick()
		contactClick()
	},'json'
	);
})


//RETRIEVE JOB DOCUMENTS, CREATE CONSTANT INSTANCE, APPEND DOCUMENTS
const getDocuments = function (data) {
    jQuery(data['documents']).each(function(i, document){
        let d = new Document(document, user_id)
        $("#job-documents").append(d.formatSpan())
    })
}


//RETRIEVE JOB CONTACTS, CREATE CONSTANT INSTANCE, APPEND CONTACTS
const getContacts = function (data) {
    jQuery(data['contacts']).each(function(i, contact){
        let c = new Contact(contact, user_id)
        $("#job-contacts").append(c.formatSpan())
    })
}


//CHANGE APPLIED STATUS
const buttonApplied = function (job) {
	$('#switch').on('click', function() {
	    $.get(`/users/${user_id}/jobs/${job_id}/applied?q=${!job.applied}`, function(data) {
	    	console.log('clicked')
	    	$('#job-applied').empty()
	    	$('#job-applied').append(job.appliedString(!job.applied))
	    })
	})
}


//DISPLAY APPLIED STATUS BUTTON AND TEXT
const displayAppliedDetails = function (job) {
	$('#job-applied').append(job.appliedString())
	$('#applied-btn').append(job.appliedButton())
}



//LISTENER FOR NEXT BUTTON - SENDS TO USER'S NEXT JOB
const nextButton = function() {
	$('.btn-next').on('click', function() {
		let nextPg = `${job_id}/next`
		window.location.href = nextPg;
	})
}

//LISTENER FOR PREVIOUS BUTTON - SENDS TO USER'S PREVIOUS JOB
const previousButton = function() {
	$('.btn-previous').on('click', function() {		
		let previousPg = `${job_id}/previous`
		window.location.href = previousPg;
	})
}


//BUTTON LISTENER, SEND PATCH W CONTACT TO CONTROLLER, 
const linkContact = function() {
	$('#btn-add-contact').on('click', function(e) {
		e.preventDefault()
		var form = $('#add-contact')
		var action = form.attr('action')
		var c_id = form.serialize()

		$.ajax({url: `/users/${user_id}/jobs/${job_id}/add_contact`, 
			data: c_id, 
			type: "PATCH", 
            success: function (data) {
            	contact = new Contact(data, user_id)
				$("#job-contacts").append(contact.formatSpan())
                alert('success') 
            },
            error: function (data) {
                alert('no success') }
        })
	})
}


//BUTTON LISTENER, SEND PATCH W DOCUMENT TO CONTROLLER, 
const linkDocument = function() {
	$('#btn-add-document').on('click', function(e) {
		e.preventDefault()
		var form = $('#add-document')
		var action = form.attr('action')
		var d_id = form.serialize()

		$.ajax({url: `/users/${user_id}/jobs/${job_id}/add_document`,
		data: d_id,
		type: "PATCH", 
        success: function (data) {
        	doc = new Document(data, user_id)
			$("#job-documents").append(doc.formatSpan())
            alert('success') },
        error: function (data) {
            alert('no success') }
        })
	})
}





//BUTTON LISTENER, REMOVE JOB CONTACT 
const unlinkContact = function() {
	$('span.remove-contact').on('click', function(e) {
		let c_id = this.id
	    $.get(`/users/${user_id}/jobs/${job_id}/unlink_contact?q=${c_id}`, function(data) {
	    	let id = data['id']
	    	$("#contactItem-" + id).remove()
	    	$("#" + id).remove()	    	
	    	//AND REMOVE THE SPAN CHILD <BR>   	

	    })
	})
}


//BUTTON LISTENER, REMOVE JOB DOCUMENT 
const unlinkDocument = function() {
	$('span.remove-document').on('click', function(e) {
		let d_id = this.id
	    $.get(`/users/${user_id}/jobs/${job_id}/unlink_document?q=${d_id}`, function(data) {
	    	let id = data['id']
	    	$("#documentItem-" + id).remove()
	    	$("#" + id).remove()	 
	    	//AND REMOVE THE SPAN CHILD <BR>   	
	    })
	})
}





const docClick = function() {
	var clicks = 0

	$("i.doc").on('click', function() {
		var id = this.id
		console.log('doc')

	if (clicks % 2 == 0) {
		$('.document.'+id).css('display', 'block')
		clicks++
		}
	else {
		$('.document.'+id).css('display', 'none')
		clicks++
		} 
	});
}



const contactClick = function() {
	var clicks = 0

	$("i.contact").on('click', function() {
		var id = this.id
		console.log('contact')

	if (clicks % 2 == 0) {
		$('.contact.'+id).css('display', 'block')
		clicks++
		}
	else {
		$('.contact.'+id).css('display', 'none')
		clicks++
		} 
	});
}





</script>











